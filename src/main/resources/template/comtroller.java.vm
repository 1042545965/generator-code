package ${package.Controller};


#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end
import com.sdongpos.common.annotation.Log;
import com.sdongpos.common.utils.Result;

import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.validation.annotation.Validated;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import java.util.List;
import javax.validation.Valid;
import javax.validation.constraints.NotBlank;

/**
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("/#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end
private final Logger logger = LoggerFactory.getLogger(${table.controllerName}.class);

@Autowired
public ${table.serviceName} ${table.entityPath}Service;







    /**
    * 根据id删除对象
    * @param id  实体ID
    * @return
    */
    @Log("删除")
    @ResponseBody
    @PostMapping(value="/${table.entityPath}Delete")
    public Result<String> ${table.entityPath}Delete(Long id){
            ${table.entityPath}Service.delete${entity}ById(id);
            return Result.ok();
    }


    /**
    * 修改
    * @param
    * @return
    */
    @Log("修改")
    @ResponseBody
    @PostMapping(value="/${table.entityPath}Update")
    public Result<String> ${table.entityPath}Update(@Valid ${entity} ${table.entityPath}){
                ${table.entityPath}Service.update(${table.entityPath});
                return Result.ok();
    }



    /**
    * 新增
    * @param
    * @return
    */
    @Log("新增")
    @ResponseBody
    @PostMapping(value="/${table.entityPath}Insert")
    public Result<String> ${table.entityPath}Insert(@Valid ${entity} ${table.entityPath}){
                    ${table.entityPath}Service.insert(${table.entityPath});
                    return Result.ok();
    }

}